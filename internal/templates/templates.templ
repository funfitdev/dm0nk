package templates

import "dm0nk/internal/models"

templ Layout(title string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ title }</title>
			<link rel="stylesheet" href="/static/app.css"/>
			<link rel="preconnect" href="https://fonts.googleapis.com"/>
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
			<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet"/>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
		</head>
		<body class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
			<nav class="bg-white/80 backdrop-blur-md border-b border-gray-200 sticky top-0 z-50">
				<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
					<div class="flex justify-between h-16">
						<div class="flex items-center">
							<div class="flex-shrink-0">
								<h1 class="text-xl font-bold text-gray-900">dm0nk</h1>
							</div>
							<div class="hidden md:block ml-10">
								<div class="flex items-baseline space-x-4">
									<a href="/" class="text-gray-900 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200">Notes</a>
									<a href="/about" class="text-gray-600 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200">About</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</nav>
			<main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
				{ children... }
			</main>
		</body>
	</html>
}

templ HomePage(title string) {
	@Layout("Home - dm0nk") {
		<div class="px-4 py-8">
			<!-- Hero Section -->
			<div class="text-center mb-16">
				<h1 class="text-5xl md:text-7xl font-bold text-gray-900 mb-6">{ title }</h1>
				<p class="text-xl text-gray-600 max-w-2xl mx-auto mb-8">
					A modern web server built with cutting-edge technologies for exceptional performance and developer experience.
				</p>
				<div class="flex flex-col sm:flex-row gap-4 justify-center">
					<a href="/notes" class="inline-flex items-center px-8 py-3 border border-transparent text-base font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 transition-colors duration-200">
						View Notes
						<svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
						</svg>
					</a>
					<a href="/about" class="inline-flex items-center px-8 py-3 border border-gray-300 text-base font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors duration-200">
						Learn More
					</a>
				</div>
			</div>
			<!-- Features Section -->
			<div class="grid md:grid-cols-3 gap-8 mb-16">
				<div class="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
					<div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4">
						<svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
						</svg>
					</div>
					<h3 class="text-lg font-semibold text-gray-900 mb-2">Lightning Fast</h3>
					<p class="text-gray-600">Built with Go for exceptional performance and concurrent request handling.</p>
				</div>
				<div class="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
					<div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4">
						<svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
						</svg>
					</div>
					<h3 class="text-lg font-semibold text-gray-900 mb-2">Type Safe</h3>
					<p class="text-gray-600">Leverages templ for compile-time HTML template validation and safety.</p>
				</div>
				<div class="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
					<div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4">
						<svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17v4a2 2 0 002 2h4M15 7a2 2 0 012 2v4a2 2 0 01-2 2H9a2 2 0 01-2-2V9a2 2 0 012-2h6z"></path>
						</svg>
					</div>
					<h3 class="text-lg font-semibold text-gray-900 mb-2">Modern Stack</h3>
					<p class="text-gray-600">Uses cutting-edge tools like Tailwind CSS and HTMX for great UX.</p>
				</div>
			</div>
		</div>
	}
}

templ AboutPage(title, description string) {
	@Layout("About - dm0nk") {
		<div class="px-4 py-8">
			<div class="max-w-4xl mx-auto">
				<!-- Header -->
				<div class="text-center mb-12">
					<h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">{ title }</h1>
					<p class="text-xl text-gray-600 max-w-2xl mx-auto">{ description }</p>
				</div>
				<!-- Features List -->
				<div class="grid md:grid-cols-2 gap-8 mb-12">
					<div class="space-y-6">
						<h2 class="text-2xl font-semibold text-gray-900">Technology Stack</h2>
						<div class="space-y-4">
							<div class="flex items-center space-x-3 p-4 bg-white rounded-lg shadow-sm border border-gray-100">
								<div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
									<svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
										<path d="M1.5 4.5c0-.828.672-1.5 1.5-1.5h18c.828 0 1.5.672 1.5 1.5v15c0 .828-.672 1.5-1.5 1.5H3c-.828 0-1.5-.672-1.5-1.5v-15z"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-semibold text-gray-900">Go Backend</h3>
									<p class="text-sm text-gray-600">High-performance server with excellent concurrency</p>
								</div>
							</div>
							<div class="flex items-center space-x-3 p-4 bg-white rounded-lg shadow-sm border border-gray-100">
								<div class="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center">
									<svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 24 24">
										<path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-semibold text-gray-900">Templ for HTML Generation</h3>
									<p class="text-sm text-gray-600">Type-safe templates with compile-time validation</p>
								</div>
							</div>
							<div class="flex items-center space-x-3 p-4 bg-white rounded-lg shadow-sm border border-gray-100">
								<div class="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center">
									<svg class="w-5 h-5 text-purple-600" fill="currentColor" viewBox="0 0 24 24">
										<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-semibold text-gray-900">Chi Router</h3>
									<p class="text-sm text-gray-600">Lightweight and powerful HTTP router</p>
								</div>
							</div>
						</div>
					</div>
					<div class="space-y-6">
						<h2 class="text-2xl font-semibold text-gray-900">Key Features</h2>
						<div class="space-y-4">
							<div class="flex items-start space-x-3">
								<div class="flex-shrink-0 w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-0.5">
									<svg class="w-3 h-3 text-green-600" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-medium text-gray-900">High Performance</h3>
									<p class="text-sm text-gray-600">Optimized for speed and minimal resource usage</p>
								</div>
							</div>
							<div class="flex items-start space-x-3">
								<div class="flex-shrink-0 w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-0.5">
									<svg class="w-3 h-3 text-green-600" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-medium text-gray-900">Developer Experience</h3>
									<p class="text-sm text-gray-600">Modern tooling with hot reload and type safety</p>
								</div>
							</div>
							<div class="flex items-start space-x-3">
								<div class="flex-shrink-0 w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-0.5">
									<svg class="w-3 h-3 text-green-600" fill="currentColor" viewBox="0 0 20 20">
										<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
									</svg>
								</div>
								<div>
									<h3 class="font-medium text-gray-900">Responsive Design</h3>
									<p class="text-sm text-gray-600">Beautiful UI that works on all devices</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

templ NotesIndex(notes []models.Note, hasMore bool, offset int) {
	@Layout("Notes - dm0nk") {
		<div class="px-4">
			<!-- Header -->
			<div class="text-center mb-8">
				<h1 class="text-4xl font-bold text-gray-900 mb-4">Your Notes</h1>
				<p class="text-lg text-gray-600 max-w-2xl mx-auto">
					Explore your thoughts, ideas, and memories in a beautiful masonry layout.
				</p>
			</div>
			<!-- Notes Grid -->
			<div id="notes-container" class="grid grid-cols-1 md:grid-cols-2 gap-6 auto-rows-max">
				for _, note := range notes {
					@NoteCard(note)
				}
			</div>
			<!-- Load More Trigger -->
			if hasMore {
				<div
					id="load-more-trigger"
					hx-get={ "/api/notes?offset=" + intToString(offset) }
					hx-trigger="intersect once"
					hx-target="#notes-container"
					hx-swap="beforeend"
					class="flex justify-center py-8"
				>
					<div class="animate-pulse flex space-x-4">
						<div class="rounded-full bg-gray-300 h-3 w-3"></div>
						<div class="rounded-full bg-gray-300 h-3 w-3"></div>
						<div class="rounded-full bg-gray-300 h-3 w-3"></div>
					</div>
				</div>
			}
		</div>
	}
}

templ NoteCard(note models.Note) {
	<div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 hover:shadow-md transition-shadow duration-200 break-inside-avoid mb-6">
		<!-- Note Type Badge -->
		<div class="flex items-center justify-between mb-3">
			<span class={ "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium", getNoteTypeBadgeClass(note.Type) }>
				{ note.Type }
			</span>
			<time class="text-xs text-gray-500" datetime={ note.CreatedAt.Format("2006-01-02T15:04:05Z07:00") }>
				{ note.CreatedAt.Format("Jan 2, 2006") }
			</time>
		</div>
		<!-- Note Title -->
		<h3 class="text-lg font-semibold text-gray-900 mb-3 line-clamp-2">{ note.Title }</h3>
		<!-- Note Content Preview -->
		<div class="text-sm text-gray-600 line-clamp-4">
			@NoteContentPreview(note)
		</div>
		<!-- Note Actions -->
		<div class="mt-4 flex items-center justify-between">
			<button class="text-blue-600 hover:text-blue-800 text-sm font-medium">
				Read more
			</button>
			<div class="flex space-x-2">
				<button class="text-gray-400 hover:text-gray-600">
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
					</svg>
				</button>
				<button class="text-gray-400 hover:text-gray-600">
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
					</svg>
				</button>
			</div>
		</div>
	</div>
}

templ NoteCards(notes []models.Note, hasMore bool, offset int) {
	for _, note := range notes {
		@NoteCard(note)
	}
	if hasMore {
		<div
			id="load-more-trigger"
			hx-get={ "/api/notes?offset=" + intToString(offset) }
			hx-trigger="intersect once"
			hx-target="#notes-container"
			hx-swap="beforeend"
			class="flex justify-center py-8 col-span-full"
		>
			<div class="animate-pulse flex space-x-4">
				<div class="rounded-full bg-gray-300 h-3 w-3"></div>
				<div class="rounded-full bg-gray-300 h-3 w-3"></div>
				<div class="rounded-full bg-gray-300 h-3 w-3"></div>
			</div>
		</div>
	}
}

templ NoteContentPreview(note models.Note) {
	if note.Type == "markdown" {
		@MarkdownPreview(note.Data)
	} else if note.Type == "checklist" {
		@ChecklistPreview(note.Data)
	} else if note.Type == "birthdays" {
		@BirthdaysPreview(note.Data)
	} else {
		@TextPreview(note.Data)
	}
}

templ TextPreview(data []byte) {
	<div class="prose prose-sm max-w-none text-gray-600">
		<p>📄 Text note</p>
	</div>
}

templ MarkdownPreview(data []byte) {
	<div class="prose prose-sm max-w-none text-gray-600">
		<p>📝 Markdown document</p>
	</div>
}

templ ChecklistPreview(data []byte) {
	<div class="space-y-1">
		<p class="text-gray-600">✅ Checklist</p>
		<div class="text-xs text-gray-500">Tasks and todos</div>
	</div>
}

templ BirthdaysPreview(data []byte) {
	<div class="space-y-1">
		<p class="text-gray-600">🎂 Birthdays</p>
		<div class="text-xs text-gray-500">Birthday reminders</div>
	</div>
}
